{"ast":null,"code":"import React,{useState,useEffect}from'react';import{joinChat}from'./api';// Импорт функции для подписки\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const JoinChat=()=>{const[chatUrls,setChatUrls]=useState('');const[error,setError]=useState('');const[results,setResults]=useState([]);const[isLoading,setIsLoading]=useState(false);const[nextJoinIn,setNextJoinIn]=useState(null);const[totalUrls,setTotalUrls]=useState(0);const handleJoinChat=async()=>{const urls=chatUrls.split(/\\s+/).map(url=>url.trim()).filter(url=>url);console.log('URLs to join:',urls);// Debug line\nif(urls.length===0){setError('Please provide at least one URL.');return;}setError('');setResults([]);setIsLoading(true);setTotalUrls(urls.length);const retryQueue=[];const joinWithDelay=async(url,index)=>{return new Promise(resolve=>{const randomDelay=60000+Math.floor(Math.random()*60000);// Случайная задержка от 1 до 2 минут\nsetNextJoinIn(randomDelay/1000);const countdown=setInterval(()=>{setNextJoinIn(prev=>{if(prev>1)return prev-1;clearInterval(countdown);return null;});},1000);setTimeout(async()=>{try{const response=await joinChat([url]);setResults(prevResults=>[...prevResults,{urlOrUsername:url,status:'Success'}]);resolve();}catch(error){console.error('Error joining chat:',error);const match=error.message.match(/A wait of (\\d+) seconds is required/);if(match){const waitTime=parseInt(match[1],10)*1000;console.log(\"Adding \".concat(url,\" to retry queue with wait time \").concat(waitTime,\"ms\"));retryQueue.push({url,waitTime});}else{setResults(prevResults=>[...prevResults,{urlOrUsername:url,status:'Failed'}]);}resolve();}},randomDelay);});};const joinChats=async()=>{for(let i=0;i<Math.min(urls.length,15);i++){await joinWithDelay(urls[i],i);}// Process retry queue\nwhile(retryQueue.length>0){const{url,waitTime}=retryQueue.shift();console.log(\"Retrying \".concat(url,\" after wait time \").concat(waitTime,\"ms\"));await new Promise(resolve=>setTimeout(resolve,waitTime));await joinWithDelay(url,urls.length);}setChatUrls('');setIsLoading(false);};joinChats();};const successCount=results.filter(result=>result.status==='Success').length;const totalCount=results.length;const successPercentage=totalUrls>0?Math.round(totalCount/totalUrls*100):0;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-900 shadow-md rounded p-6 text-white\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-white mb-4\",children:\"Join Chat\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"textarea\",{placeholder:\"Enter Telegram chat URLs, separated by spaces or new lines\",value:chatUrls,onChange:e=>setChatUrls(e.target.value),className:\"border border-gray-600 bg-gray-800 p-2 rounded mr-2 flex-grow text-white placeholder-gray-400\",rows:\"4\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleJoinChat,className:\"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700 transition duration-300\",children:\"Join Chat\"})]}),isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Joining chats... \",successPercentage,\"% success so far\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-600 rounded-full\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-500 text-xs font-medium text-blue-100 text-center p-0.5 leading-none rounded-full\",style:{width:\"\".concat(successPercentage,\"%\")},children:[successPercentage,\"%\"]})})]}),nextJoinIn&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Next join attempt in: \",Math.ceil(nextJoinIn),\" seconds\"]})}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"text-red-500\",children:error}),/*#__PURE__*/_jsx(\"div\",{children:results.map((result,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"p-2 rounded mb-2 \".concat(result.status==='Success'?'bg-green-500':'bg-red-500'),children:[/*#__PURE__*/_jsx(\"p\",{children:result.urlOrUsername}),/*#__PURE__*/_jsx(\"p\",{children:result.status})]},index))})]});};export default JoinChat;","map":{"version":3,"names":["React","useState","useEffect","joinChat","jsx","_jsx","jsxs","_jsxs","JoinChat","chatUrls","setChatUrls","error","setError","results","setResults","isLoading","setIsLoading","nextJoinIn","setNextJoinIn","totalUrls","setTotalUrls","handleJoinChat","urls","split","map","url","trim","filter","console","log","length","retryQueue","joinWithDelay","index","Promise","resolve","randomDelay","Math","floor","random","countdown","setInterval","prev","clearInterval","setTimeout","response","prevResults","urlOrUsername","status","match","message","waitTime","parseInt","concat","push","joinChats","i","min","shift","successCount","result","totalCount","successPercentage","round","className","children","placeholder","value","onChange","e","target","rows","onClick","style","width","ceil"],"sources":["D:/Project/Yes/tg/src/components/JoinChat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { joinChat } from './api'; // Импорт функции для подписки\r\n\r\nconst JoinChat = () => {\r\n  const [chatUrls, setChatUrls] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [nextJoinIn, setNextJoinIn] = useState(null);\r\n  const [totalUrls, setTotalUrls] = useState(0);\r\n\r\n  const handleJoinChat = async () => {\r\n    const urls = chatUrls.split(/\\s+/).map(url => url.trim()).filter(url => url);\r\n    console.log('URLs to join:', urls); // Debug line\r\n\r\n    if (urls.length === 0) {\r\n      setError('Please provide at least one URL.');\r\n      return;\r\n    }\r\n\r\n    setError('');\r\n    setResults([]);\r\n    setIsLoading(true);\r\n    setTotalUrls(urls.length);\r\n    const retryQueue = [];\r\n\r\n    const joinWithDelay = async (url, index) => {\r\n      return new Promise(resolve => {\r\n        const randomDelay = 60000 + Math.floor(Math.random() * 60000); // Случайная задержка от 1 до 2 минут\r\n        setNextJoinIn(randomDelay / 1000);\r\n        const countdown = setInterval(() => {\r\n          setNextJoinIn(prev => {\r\n            if (prev > 1) return prev - 1;\r\n            clearInterval(countdown);\r\n            return null;\r\n          });\r\n        }, 1000);\r\n\r\n        setTimeout(async () => {\r\n          try {\r\n            const response = await joinChat([url]);\r\n            setResults(prevResults => [...prevResults, { urlOrUsername: url, status: 'Success' }]);\r\n            resolve();\r\n          } catch (error) {\r\n            console.error('Error joining chat:', error);\r\n            const match = error.message.match(/A wait of (\\d+) seconds is required/);\r\n            if (match) {\r\n              const waitTime = parseInt(match[1], 10) * 1000;\r\n              console.log(`Adding ${url} to retry queue with wait time ${waitTime}ms`);\r\n              retryQueue.push({ url, waitTime });\r\n            } else {\r\n              setResults(prevResults => [...prevResults, { urlOrUsername: url, status: 'Failed' }]);\r\n            }\r\n            resolve();\r\n          }\r\n        }, randomDelay);\r\n      });\r\n    };\r\n\r\n    const joinChats = async () => {\r\n      for (let i = 0; i < Math.min(urls.length, 15); i++) {\r\n        await joinWithDelay(urls[i], i);\r\n      }\r\n\r\n      // Process retry queue\r\n      while (retryQueue.length > 0) {\r\n        const { url, waitTime } = retryQueue.shift();\r\n        console.log(`Retrying ${url} after wait time ${waitTime}ms`);\r\n        await new Promise(resolve => setTimeout(resolve, waitTime));\r\n        await joinWithDelay(url, urls.length);\r\n      }\r\n\r\n      setChatUrls('');\r\n      setIsLoading(false);\r\n    };\r\n\r\n    joinChats();\r\n  };\r\n\r\n  const successCount = results.filter(result => result.status === 'Success').length;\r\n  const totalCount = results.length;\r\n  const successPercentage = totalUrls > 0 ? Math.round((totalCount / totalUrls) * 100) : 0;\r\n\r\n  return (\r\n    <div className=\"bg-gray-900 shadow-md rounded p-6 text-white\">\r\n      <h2 className=\"text-2xl font-bold text-white mb-4\">Join Chat</h2>\r\n      <div className=\"mb-4\">\r\n        <textarea\r\n          placeholder=\"Enter Telegram chat URLs, separated by spaces or new lines\"\r\n          value={chatUrls}\r\n          onChange={e => setChatUrls(e.target.value)}\r\n          className=\"border border-gray-600 bg-gray-800 p-2 rounded mr-2 flex-grow text-white placeholder-gray-400\"\r\n          rows=\"4\"\r\n        />\r\n        <button\r\n          onClick={handleJoinChat}\r\n          className=\"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700 transition duration-300\"\r\n        >\r\n          Join Chat\r\n        </button>\r\n      </div>\r\n      {isLoading && (\r\n        <div className=\"mb-4\">\r\n          <p>Joining chats... {successPercentage}% success so far</p>\r\n          <div className=\"w-full bg-gray-600 rounded-full\">\r\n            <div\r\n              className=\"bg-blue-500 text-xs font-medium text-blue-100 text-center p-0.5 leading-none rounded-full\"\r\n              style={{ width: `${successPercentage}%` }}\r\n            >\r\n              {successPercentage}%\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {nextJoinIn && (\r\n        <div className=\"mb-4\">\r\n          <p>Next join attempt in: {Math.ceil(nextJoinIn)} seconds</p>\r\n        </div>\r\n      )}\r\n      {error && <p className=\"text-red-500\">{error}</p>}\r\n      <div>\r\n        {results.map((result, index) => (\r\n          <div key={index} className={`p-2 rounded mb-2 ${result.status === 'Success' ? 'bg-green-500' : 'bg-red-500'}`}>\r\n            <p>{result.urlOrUsername}</p>\r\n            <p>{result.status}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}